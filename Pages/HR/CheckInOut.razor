@page "/hr/checkinout"


@inject HRService HRService

@namespace MESystem.Pages.HR
@using MESystem.Data.HR

@if (CheckInOuts != null)
{
    @*<DxToolbar CssClass="col-12 col-md-6 col-lg-6 d-block d-md-inline-flex p-2 align-self-left">
        <DxToolbarItem>
            <DxButton IconCssClass="fa-solid fa-window-maximize" Text="Expand All" SizeMode="SizeMode.Large" Click=@ExpandAllRows_Click Enabled="@(ListStockByFamily.Count() > 0)" CssClass="btn btn-outline-primary bg-transparent border-0 mx-2 text-large" />
            <DxButton IconCssClass="fa-solid fa-window-minimize" Text="Collapse All" SizeMode="SizeMode.Large" Click=@CollapseAllRows_Click Enabled="@(ListStockByFamily.Count() > 0)" CssClass="btn btn-outline-primary bg-transparent border-0 mx-2 text-large" />            
        </DxToolbarItem>
        <DxToolbarItem>
            <DxButton IconCssClass="fa-solid fa-file-excel" Text="Export" SizeMode="SizeMode.Large" Click=@ExportExcel Enabled="@(ListStockByFamily.Count() > 0)" CssClass="btn btn-outline-primary bg-transparent border-0 mx-2 text-large align-self-left" />
        </DxToolbarItem>
          
    </DxToolbar>*@
    <div class="m-2 d-block text-align-center">
        <DxGrid 
            Data="@CheckInOuts"
            CssClass="cw-100 m-auto overflow-y-auto"
            ShowFilterRow="true"
            AllowGroup="true"
            AllowSelectRowByClick="true"
            AutoExpandAllGroupRows="true"
            ShowGroupedColumns="false"
            DetailExpandButtonDisplayMode="GridDetailExpandButtonDisplayMode.Auto"
            ShowGroupPanel="true"
            AllowSort="true"
            PageSize="50">
            <Columns>
                <DxGridDataColumn TextAlignment="GridTextAlignment.Center" FieldName="@nameof(MESystem.Data.HR.HRCheckInOut.UserEnrollNumber)">
                    <CellDisplayTemplate>
                        @*@context.DisplayText.Split('/')[0]/@context.DisplayText.Split('/')[2].Substring(0,4)*@
                    </CellDisplayTemplate>
                    </DxGridDataColumn>
                <DxGridDataColumn TextAlignment="GridTextAlignment.Center" Caption="Part No" FieldName="@nameof(MESystem.Data.HR.HRCheckInOut.TimeStr)" AllowGroup="true" GroupIndex="0">
                    <GroupRowTemplate>
                       @* <h5>
                            @context.DataColumn.Caption: <b>@context.GroupValue</b>
                            Customer Part No: <b>@ListStockByFamily.Where(_=>_.PartNo==context.GroupValue).Take(1).FirstOrDefault().CustomerPartNo</b>

                        </h5>*@
                        <h1></h1>

                    </GroupRowTemplate>
                </DxGridDataColumn>
                <DxGridDataColumn TextAlignment="GridTextAlignment.Center" FieldName="@nameof(MESystem.Data.HR.HRCheckInOut.TimeDate)" GroupIndex="1" AllowGroup="true" />
                <DxGridDataColumn TextAlignment="GridTextAlignment.Center" FieldName="@nameof(MESystem.Data.HR.HRCheckInOut.MachineNo)" Caption="Stock Qty" />
            </Columns>
            <GroupSummary>
                <DxGridSummaryItem SummaryType="GridSummaryItemType.Sum" FieldName="@nameof(MESystem.Data.HR.HRCheckInOut.InOutState)" />
            </GroupSummary>
        </DxGrid>
    </div>

}
@*
<div class="container">
    <div class="row">
        <div class="col-3"></div>
        <div class="col-6">
            <h5 style="text-align: left; padding-top: 50px;">
                <InfosField CssTextColor="@InfoCssColor" Result="@Result" Contents="@Infofield" HighlightMsg="@HighlightMsg"></InfosField>
            </h5>
        </div>
        <div class="col-3"></div>
    </div>
</div>*@

@*<DxPopup Visible = "false"
         CloseOnEscape="true"
         CloseOnOutsideClick="true"
         ShowCloseButton="true"
         ShowFooter="true"
         HeaderText="Choose Family">
    <BodyContentTemplate>
        <DxComboBox Id="ChooseFamily"
                    NullText="Select Family ..."
                    Data="@CheckInOuts"
                    Value="@nameof(MESystem.Data.HR.CheckInOut.UserEnrollNumber)"
                    AllowUserInput="true"
                    ListRenderMode="ListRenderMode.Virtual"
                    FilteringMode="DataGridFilteringMode.StartsWith"
                    ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                    CssClass="cw-320" />
    </BodyContentTemplate>
    <FooterContentTemplate>
        <DxButton RenderStyle="ButtonRenderStyle.Primary" Text="OK" />
    </FooterContentTemplate>
</DxPopup>
*@

@code{
    private IEnumerable<HRCheckInOut>? checkInOuts;

    [Inject]
    public HRService? HRServices { get; set; }
    public IEnumerable<HRCheckInOut>? CheckInOuts { get => checkInOuts; private set => checkInOuts=value; }

    protected override async void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            CheckInOuts=await HRServices.LoadCheckInOutInformation();
            await Task.Delay(1);
            await InvokeAsync(StateHasChanged);
        }
    }
}