@page "/warehouse/shipping"

<div class="d-flex col-12 justify-content-center p-0" style="margin-top: -10px; font-size:8px">
    <a class="m-auto" accesskey="c" onclick="@(()=>{OperationMode=!OperationMode;})" role="button"><span>@Tips</span></a>
</div>

@if (Shipments == null)
{
     <div class="col-12 m-auto d-inline-flex flex-column justify-content-center align-items-center">
        <span class="align-self-center" style="display: block; margin-top:2px;">@LoadingText</span>
        <RadzenProgressBar class="align-self-center" Style="width:20%; "  ProgressBarStyle="ProgressBarStyle.Info" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    </div>
}
else
{
    <div class="@CSSViewMode">
        <div class="@CSSViewMode col-12 d-flex flex-column flex-md-column flex-lg-row justify-content-around align-content-around p-0 mt-3">
            <div class="col-12 col-md-6 col-lg-6 justify-content-between mx-1 h-100">
                <div class="col-12 d-flex flex-column">
                    <div class="col-12 d-block d-lg-inline d-lg-flex justify-content-between" aria-controls="true">
                        <div class="col-12 col-md-3 col-lg-3 p-1">
                            Shipment
                            <DxComboBox Id="ComboBox1"
                                    NullText="Select Shipment number..."
                                    TData="@(string)"
                                    TValue="@(string)"
                                    Value="@SelectedShipment"
                                    Data="@ShipmentIdList"
                                    SelectedItemChanged="@ShipmentChanged"
                                    AllowUserInput="false"
                                    CssClass="cw-100"
                                    FilteringMode="DataGridFilteringMode.StartsWith">
                            </DxComboBox>
                        </div>

                        <div id="ComboBox3" class="col-12 col-md-3 col-lg-3 p-1">
                            Purchase Order
                        @if(!string.IsNullOrEmpty(SelectedShipment))
                            {
                                <DxComboBox
                                    NullText="Select PO number..."
                                    Data="@CustomerOrderData"
                                    TData="@CustomerOrder"
                                    TValue="@CustomerOrder"
                                    SelectedItemChanged="@GetCustomerPoInShipment"
                                    AllowUserInput="true"
                                    ListRenderMode="ListRenderMode.Virtual"
                                    FilteringMode="DataGridFilteringMode.StartsWith"
                                    TextFieldName="@nameof(CustomerOrder.CustomerPoNo)"
                                    ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                    CssClass="cw-100">
                                    <DxListEditorColumn FieldName="@nameof(CustomerOrder.CustomerPoNo)"
                                                Caption="PO" />
                                    <DxListEditorColumn FieldName="@nameof(CustomerOrder.RevisedQtyDue)"
                                                Caption="Quantity" />
                                    <DxListEditorColumn FieldName="@nameof(CustomerOrder.PartNo)"
                                                Caption="PartNo" />
                                </DxComboBox>
                            }
                            else {
                                <input placeholder="Select PO..."
                                @bind-value="@PoNumber"
                                @onkeyup="@BindPoNo"
                                class="col-12 m-0 p-0 align-text-center"/>
                            }
                        </div>

                        @if (IsPhoenix)
                        {
                            <div class="col-12 col-md-3 col-lg-3 p-1">
                                Customer Version
                                <DxComboBox Id="RevCbx"
                                    Data="@StockRevision"
                                    TData="@CustomerRevision"
                                    TValue="@CustomerRevision"
                                    NullText="@(SelectedStockRevision.Rev??"Select Phoenix CV...")"
                                    SelectedItemChanged="@VersionChange"
                                    AllowUserInput="@AllowInput"
                                    ListRenderMode="ListRenderMode.Virtual"
                                    TextFieldName="@nameof(CustomerRevision.Rev)"
                                    Context="ct1"
                                    CssClass="w-100"
                                    EditFormat="VN-V/C {0} -- Qty on stock {1}">

                                    <DxListEditorColumn FieldName="@nameof(CustomerRevision.Rev)"
                                                Caption="Version" />
                                    <DxListEditorColumn FieldName="@nameof(CustomerRevision.Quantity)"
                                                Caption="Quantity" />
                                </DxComboBox>
                            </div>
                        }
                        else
                        {
                            <div class="col-12 col-md-3 col-lg-3 p-1" hidden>
                                Load all PO
                                <DxButton Click=@(LoadOpenedPO) Enabled="@(!IsPhoenix&&withoutPOmode)" CssClass="btn btn-danger w-100" Text="Load all opened PO" />
                            </div>
                        }



                        <div class="col-12 col-md-3 col-lg-3 p-1">
                            Pallet mode:
                            <DxButton Click=@EnterWithoutPOMode Enabled="@(!withoutPOmode)" CssClass="btn btn-warning w-100" Text="Scan without PO number" />
                        </div>
                    </div>
                    <div id="ControlFields" class="col-12 d-block d-lg-inline d-lg-flex justify-content-between" aria-controls="true">

                       <div class="col-12 col-md-3 col-lg-3 p-1">
                            Part No:
                            @if (withoutPOmode)
                            {
                                <div id="PartNoField">

                                <input readonly="@IsReady" @onkeyup="@BindPartNo" @bind-value="@SelectedPartNo" NullText="Input Part No"/>
                                </div>
                            }
                            else{

                                <div id="PartNoField">

                                <DxComboBox
                                    NullText="Select part..."
                                    Data="@(PartNos)"
                                    ReadOnly="@IsReady"
                                    @bind-Value="SelectedPartNo"
                                    ListRenderMode="ListRenderMode.Virtual"/>
                                </div>
                                }

                        </div>
                        <div class="col-12 col-md-3 col-lg-3 p-1">
                            Box/Pallet:
                            <input id="QuantityPerPaletteScanField" @bind-value="@(PaletteCapacity)" placeholder="Input number of cartons per pallet here..." readonly="@(IsReady||(!withoutPOmode))" class="QuantityPerPaletteScanField col-4 col-lg-4"
                                  />
                        </div>
                        <div class="col-12 col-md-3 col-lg-3 p-1">
                            FGs/Box:
                            <input dd="QuantityPerBoxScanField" @bind-value="@(QtyPerBox)" placeholder="Input quantity per carton here..." readonly="@(IsReady||(!withoutPOmode))" class="QuantityPerBoxScanField col-4 col-lg-4"
                                 />
                        </div>
                        <div class="col-12 col-md-3 col-lg-3 p-1">
                            Printer:
                            <DxComboBox Id="ComboBox2"
                                    NullText="Select Printer..."
                                    Data="@(Printers)"
                                    Value="@SelectedPrinter"
                                    SelectedItemChanged="@(e=>SelectedPrinter = e)"
                                    TValue="string"
                                    TData="string"
                                    ListRenderMode="ListRenderMode.Virtual" />

                        </div>

                    </div>
                    <div class="col-12 d-block d-lg-inline d-lg-flex justify-content-between" aria-controls="true">
                        <h3 style="color: steelblue">@PoData</h3>
                    </div>
                    <div class="col-12 d-block d-md-flex flex-column justify-content-around" aria-controls="true">
                        @if (PoData != "")
                        {
                            <div class="col-12 p-2">
                                <h3 class="@Css">&nbsp;Quantity planned: <span style="color: steelblue">@RevisedQtyDue</span>&nbsp;Quantity shipped: <span style="color: steelblue">@QtyShipped</span> </h3>
                            </div>

                            <div class="col-12 p-2">
                                <h3 style="background-color: @QtyCssColor; color: black;" class="@Css">&nbsp;Quantity in queue: <span style="color: steelblue">@QtyInShipQueue</span>&nbsp;Quantity left: <span style="color: steelblue">@QtyLeft</span></h3>
                            </div>
                        }
                        else
                        {
                            <div class="d-inline-flex flex-column justify-item-center  mt-5 p-5">
                                <h1 style="color: red;">PO number was not selected</h1>
                                <h3 style="color: red;">Please pay attention!!!</h3>
                            </div>
                        }

                    </div>


                    <div class="col-12 d-flex d-lg-flex justify-content-center mx-auto">

                        @if (CustomerRevisionsDetail is not null)
                        {
                            <DxDataGrid Data="@CustomerRevisionsDetail"
                                CssClass="col-12"
                                ShowPager="false">
                                <DxDataGridColumn Field="@nameof(CustomerRevision.PO)" Caption="PO" />
                                <DxDataGridColumn Field="@nameof(CustomerRevision.PartNo)" Caption="FRIWO PN" />
                                <DxDataGridColumn Field="@nameof(CustomerRevision.OrderNo)" Caption="Order" />
                                @if (IsPhoenix)
                                {
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.Rev)" Caption="C/V" />
                                }
                                <DxDataGridColumn Field="@nameof(CustomerRevision.ProductFamily)" Caption="Customer" />
                            </DxDataGrid>
                        }
                        else
                        {
                            <h5><i>Retrying customer revision...</i></h5>
                        }
                    </div>

                    <div class="col-12 d-block d-lg-inline d-lg-flex justify-content-between" aria-controls="true">
                        @if (IsPhoenix)
                        {
                            <h5>&bigcirc; Phoenix customer version of this PO .: <b style="color: steelblue">&nbsp;@PORevision</b></h5>
                        }
                    </div>
                </div>
            </div>

            <div class="col-12 col-lg-6 justify-content-between justify-content-lg-between align-content-around mx-1 h-100">

                @if (!IsReady)
                {
                    <div class="col-12 m-auto d-inline-flex flex-column justify-content-center align-items-center">
                    @*  <br />
                        <div class="spinner-border align-self-center"></div>
                        <br />*@
                        <span class="align-self-center" style="display: block; margin-top:2px;">@LoadingText</span>
                        <RadzenProgressBar class="align-self-center" Style="width:20%; " ProgressBarStyle="ProgressBarStyle.Info" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
                    </div>
                }
                else
                {
                    <div class="shadow bg-white rounded p-2 mt-0 align-self-lg-stretch">
                        <div class="card-title">
                            <h3>Making Pallet</h3>
                        </div>
                        <div class="card-body">
                            <div class="d-none d-md-flex flex-md-column col-12 m-0 text-muted">
                                @if (TotalScannedBox != null || ScannedBox != null)
                                {
                                    <div class="col-12 d-inline-flex justify-content-between">
                                        <div class="@Css">Total quantity of finished goods: <h1 style="color: steelblue">@TotalFgs</h1> </div>
                                        <img style="align-top: -20px" src="images/partialcode.gif" />
                                    </div>

                                    <h5 class="mb-2">Total quantity box scanned: <span style="color: steelblue;font-size: 20px">@(TotalScannedBox.Count())</span> || Quantity carton scanned: <span style="color: steelblue; font-size: 20px">@ScannedBox.Count()</span></h5>
                                }
                            </div>


                            <div class="col-12 d-inline-flex flex-column flex-md-row justify-items-around align-items-center mb-0">
                                <div class="col-12 col-md-4 d-flex flex-row justify-content-between justify-content-md-between me-2">
                                    <span for="forcePrint">Sound</span>
                                    <RadzenSwitch id="forcePrint" Placeholder="Force Print" @bind-Value="@(Sound)"></RadzenSwitch>
                                </div>
                                <div class="col-12 col-md-4 d-flex flex-row justify-content-between justify-content-md-between me-2">
                                    <span for="forcePrint">Do not print PO label</span>
                                    <RadzenSwitch id="forcePrint" Placeholder="Force Print" @bind-Value="@(ForceDoNotPrint)"></RadzenSwitch>
                                </div>
                                <div class="col-12 col-md-4 d-flex flex-row justify-content-between justify-content-md-between me-2">
                                    <span for="confirmPallet">Verify Pallet </span>
                                    <RadzenSwitch id="confirmPallet" Placeholder="Verify Pallet" @bind-Value="@(ConfirmPallet)"></RadzenSwitch>
                                </div>
                            </div>

                            <div id="ShippingScanField" class="d-block align-bottom">
                                @Scanfield
                                <div class="col-12 mt-3 d-inline-flex">
                                    <RadzenTextBox
                                     ReadOnly=@(IsWorking)
                                    @bind-Value=@Scanfield
                                    Style="width: 100%"
                                    @onkeyup="@HandleInput" />*@

                                      <input readonly="@(IsWorking)" style="width: 100%;" @bind-value=@Scanfield  @onkeyup="@HandleInput" />
                     <i class="fa-solid fa-barcode" style="aspect-ratio:auto; margin:auto; margin-left: -24px; z-index: 1; cursor:zoom-out; color: steelblue" onclick="@(async() =>{ ShowScanBarcode = true; await UpdateUI();})" />
                                </div>
                            </div>
                            <InfosField CssTextColor="@InfoCssColor" Result="@Result" Contents="@Infofield" HighlightMsg="@HighlightMsg"></InfosField>
                        </div>
                    </div>

                    @if (ConfirmPallet && IsReady)
                    {
                        <div class="col-12 d-block my-5">
                            <div id="PalletScanField" class="col-12 m-0 d-inline-flex">
                                @PalletScanField
                                <input id="PalletScanField" readonly="@(!VerifyPalletTextBoxEnabled)" @bind-value=@PalletScanField placeholder="Scan pallet here..." class="w-100"

                               @onkeyup="@HandleVerifyInput" />
                                <i class="fa-solid fa-barcode" style="aspect-ratio:auto; margin:auto; margin-left: -24px; z-index: 1; cursor:zoom-out; color: steelblue" onclick="@(async() =>{ ShowScanBarcode = true; await UpdateUI();})" />
                            </div>

                            <div id="BoxScanField" class="col-12 m-0 d-inline-flex">
                                @BoxScanField
                                <input id="BoxScanField" readonly="@(!VerifyBoxTextBoxEnabled)" @bind-value=@BoxScanField placeholder="Scan box here..." class="w-100"

                                @onkeyup="@HandleBoxVerifyInput" />
                                <i class="fa-solid fa-barcode" style="aspect-ratio:auto; margin:auto; margin-left: -24px; z-index: 1; cursor:zoom-out; color: steelblue" onclick="@(async() =>{ ShowScanBarcode = true; await UpdateUI();})" />
                            </div>

                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <div class="@(CSSViewMode+"collapse"+CSSViewMode)">
        <div class="d-flex flex-column col-12 m-0 text-muted">
            @if (TotalScannedBox != null || ScannedBox != null)
            {
                <h1 style="color:steelblue">Total: @TotalFgs / @(TotalFgs + QtyLeft)</h1>
                <div class="col-12 d-inline-flex justify-content-between">
                    <h1 class="mb-2">_@(ScannedBox.Count())_/_@(PaletteCapacity)_</h1>
                    <img style="margin-top: -40px" src="images/partialcode.gif" />
                </div>

            }
        </div>

        <div class="col-12 d-inline-flex flex-column flex-md-row justify-items-around align-items-center mb-0">
            <div class="col-12 col-md-4 d-flex flex-row justify-content-around justify-content-md-around m-1">
                <span for="forcePrint">Sound</span>
                <RadzenSwitch id="forcePrint" Placeholder="Force Print" @bind-Value="@(Sound)"></RadzenSwitch>
            </div>
            <div class="col-12 col-md-4 d-flex flex-row justify-content-around justify-content-md-around m-1">
                <span for="forcePrint">Do not print PO label</span>
                <RadzenSwitch id="forcePrint" Placeholder="Force Print" @bind-Value="@(ForceDoNotPrint)"></RadzenSwitch>
            </div>
            <div class="col-12 col-md-4 d-flex flex-row justify-content-around justify-content-md-around m-1">
                <span for="confirmPallet">Verify Pallet </span>
                <RadzenSwitch id="confirmPallet" Placeholder="Verify Pallet" @bind-Value="@(ConfirmPallet)"></RadzenSwitch>
            </div>
        </div>


    </div>

}

<div class="col-12 d-inline-flex flex-column m-2 p-3">

    @if (ScannedBox is not null && ScannedBox.Count() > 0)
    {
        <DxDataGrid Data="@ScannedBox"
                ShowPager="true"
                CssClass="cw-100 m-auto overflow-y-auto"
                ShowFilterRow="true"
                EditMode="DataGridEditMode.PopupEditForm"
                KeyFieldName="@nameof(FinishedGood.BarcodeBox)">
            <DxDataGridColumn Field="@nameof(FinishedGood.InvoiceNumber)" Caption="PO" />
            <DxDataGridColumn Field="@nameof(FinishedGood.BarcodeBox)" Caption="Box" />
            <DxDataGridColumn Field="@nameof(FinishedGood.QtyBox)" Caption="Qty" />
            <DxDataGridColumn Field="@nameof(FinishedGood.DateOfPackingBox)" Caption="Date" />
        </DxDataGrid>
    }
    else
    {
        @*  <PalleteLabel Id="palleteLabel" Src="@BarcodePallet" Content="@LabelContent" />*@
    }
</div>
<DxPopup
@bind-Visible="@CheckQtyPlanned"
         CloseOnEscape="true"
         CloseOnOutsideClick="true"
         ShowCloseButton="true"
         HeaderText="Qty for shipping"
         Closing="PopupClosing">
    <BodyContentTemplate>
        <input @bind-value="@QtyLeft" readonly="true"
                   class="textBox" />
    </BodyContentTemplate>
</DxPopup>

@if (ShowScanBarcode)
{
    <BarcodeReader ScanResult="((e) => {ShowScanBarcode = !ShowScanBarcode; })"
               Close="(()=>ShowScanBarcode=!ShowScanBarcode)"
               OnError="OnError" />
}

<JSElementFocus ReadOnlyElement="@ReadOnlyElement" FocusElement="@FocusElement" />