@page "/warehouse/shipping"


@if (CustomerOrderData == null)
{
    <div class="col-12 d-flex flex-column justify-content-center align-item-center">
        <br />
        <div class="spinner-border"></div>
        <br />
        <span style="display: inline-block; vertical-align: super">Loading...</span>
    </div>
}
else
{
    <div class="container-fluid col-12 d-flex p-0">
        <div class="col-12 col-lg-6 px-2 justify-content-around">
            <div class="d-flex d-inline-flex col-12 mb-2 justify-content-between">

                <DxComboBox Id="ComboBox1"
                        NullText="Select PO number..."
                        Data="@CustomerOrderData"
                        TData="@(CustomerOrder)"
                        TValue="@(CustomerOrder)"
                        SelectedItemChanged="@GetCustomerPo"
                        AllowUserInput="true"
                        ListRenderMode="ListRenderMode.Virtual"
                        FilteringMode="DataGridFilteringMode.StartsWith"
                        TextFieldName="@nameof(CustomerOrder.CustomerPoNo)"
                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                        CssClass="cw-320" />

                <div class="col-6 d-inline-flex flex-row-reverse px-2 me-1">
                    <DxTextBox Id="POField" Text="@PORevision" NullText="Input C/V" @onkeyup="@HandlePOInput" ReadOnly="@(IsReady||(withoutPOmode))" CssClass="POField" TextChanged="@((e) => VersionChange(e))" />
                    <label for="POField">VN C/V: </label>
                    @if (UserInput != "")
                    {
                         <label>&nbsp; UserInput:@UserInput </label> 
                    }
                </div>

            </div>
            @if (PoData != "")
            {
                <p class="d-flex flex-wrap cw-100 m-1 text-muted">
                    <b style="color: steelblue">@PoData</b>
                </p>

                <p class="d-flex flex-wrap cw-100 m-1 text-muted">
                    <b class="@Css">Quantity planned: <span style="color: steelblue">@RevisedQtyDue</span> || Quantity shipped: <span style="color: steelblue">@QtyShipped</span> || Quantity in queue: <span style="color: steelblue">@QtyInShipQueue</span></b>
                </p>

                <p class="d-flex flex-wrap cw-100 mt-2 text-muted">
                    <h3 style="background-color: @QtyCssColor; color: black;" class="@Css">Quantity left: @QtyLeft &nbsp;&nbsp; <i class="fa-solid fa-pen-to-square" style="color: steelblue" onclick=@EditShipmentQty></i></h3>
                </p>

                <div class="shadow mt-4 p-2 bg-white rounded">
                    <div class="card-title">
                        <h3>Customer Revision</h3>
                    </div>
                    <div class="card-body">
                        <div class="mb-2">
                            @if (CustomerRevisionsDetail is not null)
                            {
                                <DxDataGrid Data="@CustomerRevisionsDetail"
                                CssClass="col-12 col-lg-6 m-auto overflow-y-auto"
                                ShowPager="false">
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.PO)" Caption="PO" />
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.PartNo)" Caption="FRIWO PN" />
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.OrderNo)" Caption="Order" />
                                    @if(IsPhoenix)
                                    {
                                        <DxDataGridColumn Field="@nameof(CustomerRevision.Rev)" Caption="C/V" />
                                    }                           
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.ProductFamily)" Caption="Product Family" />
                                </DxDataGrid>
                            }
                            else
                            {
                                <h5><i>Retrying customer revision...</i></h5>
                            }
                        </div>

                        @if (IsPhoenix)
                        {
                            @*<h4 style="display: none;">C/V of model @PartNo .: <b style="color: steelblue">@CurrentIFSRevision</b></h4>*@
                            <h5>C/V of PO .: <b style="color: steelblue">&nbsp;@PORevision</b></h5>
                            @*<h5>C/V of current pallet .: <b style="color: steelblue">@FirstRevisionOnPallet</b></h5>*@
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="d-inline-flex flex-column justify-item-center mt-5 p-5">
                    <h1 style="color: red;">PO number was not selected</h1>
                    <h3 style="color: red;">Please pay attention!!!</h3>
                </div>
            }
            @if (ConfirmPallet && IsReady)
            {
                <div class="d-inline-flex mt-2 w-100">
                    <ShipOutPallet IsPopUp="true"
                           Value="@Value"
                           @bind-VerifyValue=@(IsWorking)
                           CustomerRevisionsDetail="@CustomerRevisionsDetail"
                           VerifyTextBoxEnabled="@VerifyTextBoxEnabled">
                    </ShipOutPallet>
                </div>
            }
        </div>

        <div class="col-12 col-lg-6 justify-content-arounds">
            <div class="d-block d-sm-none d-lg-flex flex-inline col-12 p-0 justify-content-between">
                <DxButton Click=@EnterWithoutPOMode Enabled="@(!withoutPOmode)" CssClass="btn btn-warning" Text="Scan without PO number" />
            </div>

            <div class="table">
                <div class="col-12 d-block d-lg-inline d-lg-flex justify-content-between" aria-controls="true">
                    <div class="col-12 col-md-4 col-lg-4 p-1">
                        FRIWO PN
                        <DxTextBox Id="PartNoField" ColSpanLg=6 ColSpanMd=12 Text="@SelectedPartNo" NullText="Input Product Number" ReadOnly="@(IsReady||(!withoutPOmode))" CssClass="PartNoField col-4 col-lg-4"
                               TextChanged="@((newValue) => SetPartNo(newValue))" />
                    </div>
                    <div class="col-12 col-md-4 col-lg-4 p-1">
                        Quantity Per Pallet
                        <DxTextBox Id="QuantityPerPaletteScanField" ColSpanLg=6 ColSpanMd=12 Text="@(PaletteCapacity.ToString())" NullText="Input number of cartons per pallet here..." ReadOnly="@(IsReady||(!withoutPOmode))" CssClass="QuantityPerPaletteScanField col-4 col-lg-4"
                               TextChanged="@((newValue) => SetQuantityPerPalette(newValue))" />
                    </div>
                    <div class="col-12 col-md-4 col-lg-4 p-1">
                        Quantity Per Carton
                        <DxTextBox Id="QuantityPerBoxScanField" Text="@(QtyPerBox.ToString())" ColSpanLg=6 ColSpanMd=12 NullText="Input quantity per carton here..." ReadOnly="@(IsReady||(!withoutPOmode))" CssClass="QuantityPerBoxScanField col-4 col-lg-4"
                               TextChanged="@((newValue) => SetQuantityPerBox(newValue))" />
                    </div>
                </div>
                <div class="col-12 col-md-4 col-lg-4 p-1">
                    <label for="ComboBox2">Printer:&nbsp;&nbsp;</label>
                    <div class="d-flex flex-row col-12">

                        <DxComboBox Id="ComboBox2"
                                NullText="Select Printer..."
                                Data="@(Printers)"
                                Value="@SelectedPrinter"
                                SelectedItemChanged="@(e=>SelectedPrinter = e)"
                                TValue="string"
                                TData="string"
                                ListRenderMode="ListRenderMode.Virtual"
                                CssClass="col-12" />
                    </div>
                </div>
            </div>
            @if (!IsReady)
            {
                <div class="col-12 d-flex flex-column justify-content-center align-item-center">
                    <br />
                    <div class="spinner-border"></div>
                    <br />
                    <span style="display: inline-block; vertical-align: super">Loading...</span>
                </div>
            }
            else
            {
                <div class="shadow bg-white rounded mt-4 p-2">
                    <div class="card-title">
                        <h3>Making Pallet</h3>
                    </div>
                    <div class="card-body">
                        <div class="d-none d-md-flex flex-md-column col-12 m-0 text-muted">
                            @if (TotalScannedBox != null || ScannedBox != null)
                            {
                                <div class="col-12 d-inline-flex justify-content-between">
                                    <div class="@Css">Total quantity of finished goods: <h1 style="color: steelblue">@TotalFgs</h1> </div>
                                    <img class="" src="images/partialcode.gif" />
                                </div>

                                <h5 class="mb-2">Total quantity box scanned: <span style="color: steelblue;font-size: 20px">@(TotalScannedBox.Count())</span> || Quantity carton scanned: <span style="color: steelblue; font-size: 20px">@ScannedBox.Count()</span></h5>
                            }
                        </div>

                        <div class="col-12 d-inline-flex flex-column flex-md-row justify-content-between mb-2">
                            <div class="col-12 col-md-3 d-inline-flex flex-row justify-content-between justify-content-md-start m-1">
                                <label for="forcePrint">Sound</label>
                                <RadzenSwitch id="forcePrint" Placeholder="Force Print" @bind-Value="@(Sound)"></RadzenSwitch>
                            </div>
                            <div class="col-12 col-md-3 d-inline-flex flex-row justify-content-between justify-content-md-start m-1">
                                <label for="forcePrint">Do not print PO label</label>
                                <RadzenSwitch id="forcePrint" Placeholder="Force Print" @bind-Value="@(ForceDoNotPrint)"></RadzenSwitch>
                            </div>
                            <div class="col-12 col-md-3 d-inline-flex flex-row justify-content-between justify-content-md-start m-1">
                                <label for="confirmPallet">Verify Pallet </label>
                                <RadzenSwitch id="confirmPallet" Placeholder="Verify Pallet" @bind-Value="@(ConfirmPallet)"></RadzenSwitch>
                            </div>
                        </div>

                        <div id="ShippingScanField" class="m-0 d-block">
                            <DxFormLayout CssClass="col-12 m-0 d-inline-flex">
                                <DxFormLayoutTabPages CssClass="col-12 m-0 d-md-block d-sm-block d-inline-flex">
                                    <DxFormLayoutTabPage Caption="@Title">
                                        <DxFormLayoutItem CssClass="w-100">
                                            <div class="col-12 m-0 d-inline-flex flex-row">
                                                <DxTextBox Text=@(Scanfield) NullText="Scan carton here..." ReadOnly=@(IsWorking) CssClass="w-100" TextChanged="@((e)=>GetInputfield(e))" @onkeyup="@HandleInput" />
                                                <i class="fa-solid fa-barcode" style="aspect-ratio:auto; margin:auto; margin-left: -24px; z-index: 1; cursor:zoom-out; color: steelblue" onclick="@(async() =>{ ShowScanBarcode = true; await UpdateUI();})"/>
                                            </div>
                                        </DxFormLayoutItem>
                                    </DxFormLayoutTabPage>
                                </DxFormLayoutTabPages>
                            </DxFormLayout>
                        </div>
                        <InfosField CssTextColor="@InfoCssColor" Result="@Result" Contents="@Infofield" HighlightMsg="@HighlightMsg"></InfosField>
                    </div>
                </div>
            }
        </div>
    </div>
}

<div class="col-12 d-inline-flex flex-column m-2 p-3">

    @if (ScannedBox is not null && ScannedBox.Count() > 0)
    {
        <DxDataGrid Data="@ScannedBox"
                ShowPager="true"
                CssClass="cw-100 m-auto overflow-y-auto"
                KeyFieldName="@nameof(FinishedGood.BarcodeBox)">
            <DxDataGridColumn Field="@nameof(FinishedGood.InvoiceNumber)" Width="80px" Caption="PO" />
            <DxDataGridColumn Field="@nameof(FinishedGood.BarcodeBox)" Width="80px" />
            <DxDataGridColumn Field="@nameof(FinishedGood.QtyBox)" Width="10px" Caption="Qty" />
            <DxDataGridColumn Field="@nameof(FinishedGood.DateOfPackingBox)" Width="90px" Caption="Date" />
        </DxDataGrid>
    }
    else
    {
        @*  <PalleteLabel Id="palleteLabel" Src="@BarcodePallet" Content="@LabelContent" />*@
    }
</div>

<DxPopup @bind-Visible="@CheckQtyPlanned"
         CloseOnEscape="true"
         CloseOnOutsideClick="true"
         ShowCloseButton="true"
         HeaderText="Qty for shipping"
         Closing="PopupClosing">
    <BodyContentTemplate>
        <DxTextBox Text="@QtyLeft.ToString()"
                   TextChanged="@((newQty) => OnValueChanged(newQty))"
                   InputCssClass="textBox" />
    </BodyContentTemplate>
</DxPopup>

@if (ShowScanBarcode)
{
<BarcodeReader ScanResult="((e) => {ShowScanBarcode = !ShowScanBarcode; })"   
                   Close="(()=>ShowScanBarcode=!ShowScanBarcode)"
                   OnError="OnError" />
}
