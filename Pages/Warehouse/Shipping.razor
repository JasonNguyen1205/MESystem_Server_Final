@page "/shipping"
@using MESystem.LabelComponents

@if (CustomerOrderData == null)
{
    <div class="col-12 d-flex flex-column justify-content-center align-item-center">
        <br />
        <div class="spinner-border"></div>
        <br />
        <span style="display: inline-block; vertical-align: super">Loading...</span>
    </div>
}
else
{
    <div class="col-12 d-block d-sm-flex justify-content-around align-item-around p-2">
        <div class="col-12 col-lg-6 p-2">
            <div class="d-flex flex-wrap cw-100">
                <DxComboBox Id="ComboBox1"
                        NullText="Select a PO number..."
                        Data="@CustomerOrderData"
                        FilteringMode="DataGridFilteringMode.StartsWith"
                        ValueChanged="@((CustomerOrder value) => GetCustomerPo(value))"
                        TextFieldName="@nameof(CustomerOrder.CustomerPoNo)"
                        ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                        CssClass="cw-480" />
            </div>
            @if (PoData != "")
            {
                <p class="d-flex flex-wrap cw-100 mt-2 text-muted">
                    <b>@PoData</b>
                </p>

                <p class="d-flex flex-wrap cw-100 mt-2 text-muted">
                    <b class="@Css">Qty planned: @RevisedQtyDue || Qty shipped: @QtyShipped</b>
                </p>

                <p class="d-flex flex-wrap cw-100 mt-2 text-muted">
                    <h3 style="background-color: @QtyCssColor; color: black;" class="@Css">Quantity left: @QtyLeft &nbsp;&nbsp; <i class="fa-solid fa-pen-to-square text-primary" onclick=@EditShipmentQty></i></h3>
                </p>

                <div class="shadow p-3 mb-5 bg-white rounded">
                    <div class="card-title">
                        <h3>Customer Revision</h3>
                    </div>
                    <div class="card-body">
                        <div>
                            @if (CustomerRevisionsDetail is not null)
                            {
                                <DxDataGrid Data="@CustomerRevisionsDetail"
                                CssClass="col-lg-6 m-auto overflow-auto"
                                ShowPager="false"
                                KeyFieldName="@nameof(CustomerRevision.OrderNo)">
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.PO)" Caption="PO No." />
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.PartNo)" Caption="Part No." />
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.OrderNo)" Caption="Order No." />
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.Rev)" Caption="Customer Revision" />
                                    <DxDataGridColumn Field="@nameof(CustomerRevision.ProductFamily)" Caption="Product Family" />
                                </DxDataGrid>
                            }
                            else
                            {
                                <h5><i>Retrying customer revision...</i></h5>
                            }
                        </div>


                        @if (IsPhoenix)
                        {
                            <h4>Rev of model @PartNo .: <b style="color: blue">@CurrentIFSRevision</b></h4>
                            <h5>Rev of selected PO .: <b style="color: blue">@FirstRevisionOnPO</b></h5>
                            <h5>Rev of the current pallete .: <b style="color: blue">@FirstRevisionOnPallete</b></h5>
                        }
                    </div>
                </div>

            }
            else
            {
                <div class="d-flex flex-column justify-content-center">
                    <h1 style="color: red;">PO no is not set</h1>
                    <h3 style="color: red;">Please pay attention!!!</h3>
                </div>
            }
        </div>

        <div class="col-12 col-lg-6 p-2 justify-content-around align-item-end">
            <p>
                <DxButton Click=@EnterWithoutPOMode Enabled="@(!withoutPOmode)" CssClass="btn btn-warning" Text="Scan without PO number" />
            </p>
            <div class="table">
                <div class="row">
                    <p class="col-4">
                         Part No
                    </p>
                     <p class="col-4">
                         Quantity Per Pallet
                    </p>
                     <p class="col-4">
                         Quantity Per Box
                    </p>
                </div>
                <div class="row">
                <p class="col-12 d-block d-lg-inline d-lg-flex justify-content-between" aria-controls="true">
                    <DxTextBox Id="PartNoField" ColSpanLg=6 ColSpanMd=12 NullText="Input Part No..." ReadOnly=@(!(TextBoxEnabled||withoutPOmode)) CssClass="PartNoField col-4 col-lg-4"
                           TextChanged="@((newValue) => SetPartNo(newValue))" @onkeyup=@MoveFirst />
                    &nbsp;
                    <DxTextBox Id="QuantityPerPaletteScanField" ColSpanLg=6 ColSpanMd=12 Text="@(PaletteCapacity.ToString())" NullText="Input number of boxes per pallete here..." ReadOnly=@(!(TextBoxEnabled||withoutPOmode)) CssClass="QuantityPerPaletteScanField col-4 col-lg-4"
                           TextChanged="@((newValue) => SetQuantityPerPalette(newValue))" @onkeyup=@MoveNext />
                    &nbsp;
                    <DxTextBox Id="QuantityPerBoxScanField" Text="@(QtyPerBox.ToString())" ColSpanLg=6 ColSpanMd=12 NullText="Input quantity per box here..." ReadOnly=@(!(TextBoxEnabled||withoutPOmode)) CssClass="QuantityPerBoxScanField col-4 col-lg-4"
                           TextChanged="@((newValue) => SetQuantityPerBox(newValue))" @onkeyup=@StartJob />
                </p>
                </div>
            </div>
           

            <p class="d-flex flex-wrap cw-100 mt-2 text-muted">
                <span>Quantity box per pallete: <b style="color: blue">@PaletteCapacity</b></span>
                &nbsp;&nbsp;
                <span>Quantity FGs per box: <b style="color: blue">@QtyPerBox</b></span>
            </p>

            <p class="d-flex flex-wrap cw-100 mt-2 text-muted">
                <b style="color: blue">@PoData</b>
            </p>

            @if (TextBoxEnabled == false && IsReady || CustomerOrderData is null)
            {
                <div class="col-12 d-flex flex-column justify-content-center align-item-center">
                    <br />
                    <div class="spinner-border"></div>
                    <br />
                    <span style="display: inline-block; vertical-align: super">Loading...</span>
                </div>
            }
            else
            {
                <div class="shadow px-0 mb-0 bg-white rounded">
                    <div class="card-body">
                        <div class="d-block cw-100 m-0 text-muted">
                            @if (TotalScannedBox != null || ScannedBox != null)
                            {
                                <p class="@Css">Total qty of FGs: <h1 style="color: blue">@TotalFgs</h1> </p>
                                <h5 class="mb-2">Total qty box scanned: <span style="color: blue;font-size: 20px">@TotalScannedBox.Count()</span> || Qty box scanned: <span style="color: blue; font-size: 20px">@ScannedBox.Count()</span></h5>

                            }
                        </div>
                        <div class="col-12 d-inline-flex justify-content-between">
                            <label for="forcePrint">Force Print </label>
                            <RadzenSwitch id="forcePrint" Placeholder="Force Print" @bind-Value="@(ForcePrint)"></RadzenSwitch>
                            &nbsp;&nbsp;
                            <label for="confirmPallet">Verify Pallet </label>
                            <RadzenSwitch id="confirmPallet" Placeholder="Verify Pallet" @bind-Value="@(ConfirmPallet)"></RadzenSwitch>
                        </div>
                        <div Id="ShippingScanField" class="m-0 d-block">
                            <DxFormLayout CssClass="col-12 m-0 d-inline-flex">
                                <DxFormLayoutTabPages CssClass="col-12 m-0 d-md-block d-sm-block d-inline-flex">
                                    <DxFormLayoutTabPage Caption="@Title">
                                        <DxFormLayoutItem CssClass="cw-100" Visible=@((TextBoxEnabled||withoutPOmode)&&IsReady)>

                                            <DxTextBox Text=@(Scanfield) NullText="Scan box here..." ReadOnly=@(!(TextBoxEnabled||withoutPOmode)) CssClass="ShippingScanField w-100" TextChanged="@((e)=>GetInputfield(e))"
                                               @onkeyup="@HandleInput" />

                                        </DxFormLayoutItem>
                                    </DxFormLayoutTabPage>
                                </DxFormLayoutTabPages>
                            </DxFormLayout>
                           
                            <InfosField CssTextColor="@InfoCssColor" Contents="@Infofield"></InfosField>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
@if (ConfirmPallet)
{
    <ShipOutPallet 
        IsPopUp="true" 
        Value="@Value" 
        CustomerRevisionsDetail="@CustomerRevisionsDetail" 
        VerifyTextBoxEnabled=@(VerifyTextBoxEnabled)>
    </ShipOutPallet>
}


<div class="col-12 d-block">

    @if (ScannedBox is not null && ScannedBox.Count() > 0)
    {
        <DxDataGrid Data="@ScannedBox"
                ShowPager="false"
                CssClass="cw-100 m-auto overflow-y-auto"
                ShowFilterRow="true">
            <DxDataGridColumn Field="@nameof(FinishedGood.InvoiceNumber)" Width="80px" Caption="PO no." />
            <DxDataGridColumn Field="@nameof(FinishedGood.BarcodeBox)" Width="80px" />
            <DxDataGridColumn Field="@nameof(FinishedGood.QtyBox)" Width="10px" Caption="Qty" />
            <DxDataGridColumn Field="@nameof(FinishedGood.DateOfPackingBox)" Width="90px" Caption="Date" />
        </DxDataGrid>
    }
    <div class="PalleteLabel">
        <PalleteLabel Id="palleteLabel" Src="@BarcodePallete" Content="@LabelContent" />
    </div>
</div>

<DxPopup @bind-Visible="@CheckQtyPlanned"
         ShowFooter="true"
         CloseOnEscape="false"
         CloseOnOutsideClick="false"
         ShowCloseButton="false"
         HeaderText="Qty for shipping"
         Closing="PopupClosing">
    <BodyContentTemplate>
        @*<b>Click to edit:</b>*@
        <DxTextBox Text="@QtyLeft.ToString()"
                   TextChanged="@((newQty) => OnValueChanged(newQty))"
                   InputCssClass="textBox" />
    </BodyContentTemplate>
    <FooterContentTemplate Context="Context">
        @*<DxButton CssClass="popup-demo-events-button" RenderStyle="ButtonRenderStyle.Primary" Text="Yes" Click="@UpdateNewPph" />*@
        <DxButton CssClass="popup-demo-events-button" IconCssClass="fa fa-check" RenderStyle="ButtonRenderStyle.Primary" Click="@(() => CheckQtyPlanned = false)" />
    </FooterContentTemplate>
</DxPopup>
